name: Continuous Delivery

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
        with:
          # Fetches entire history, so we can analyze commits since last release tag
          fetch-depth: 0
      - name: Test
        run: |
          wget -q -O- https://github.com/kward/shunit2/archive/refs/tags/v2.1.8.tar.gz | \
            sudo tar -C /usr/local/bin shunit2-2.1.8/shunit2 --strip-components=1 -xzf -

          run_tests=./tests/run.sh
          chmod +x $run_tests
          $run_tests
      - name: Determine Release Version
        id: versioning
        uses: ./
      - name: Determine Release Tag
        id: release-tag
        run: |
          tag=v${{ steps.versioning.outputs.version }}
          if ${{ steps.versioning.outputs.is-prerelease }}; then
            tag="$tag-pre-$(echo ${{ steps.versioning.outputs.release-ref }} | cut -c1-8)"
          fi

          echo "::set-output name=tag::$tag"
      - name: Convert Commit Logs to JSON
        id: convert-commit-logs
        uses: mikefarah/yq@v4.25.2
        with:
          cmd: yq ea -o=json 'select(. != null) | [.]' ${{ steps.versioning.outputs.commits-file-path }} | tee commit_logs.json
      - name: Create Tag
        uses: actions/github-script@v3
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.release-tag.outputs.tag }}",
              sha: "${{ steps.versioning.outputs.release_ref }}"
            });
      - name: Generate Release Notes
        id: release_notes
        uses: Fresa/release-notes-generator@v1
        with:
            version: ${{ steps.release-tag.outputs.tag }}
            last_release_ref: ${{ steps.versioning.outputs.last-release-ref }}
            release_ref: ${{ steps.versioning.outputs.release-ref }}
            path_to_commits: ./commit_logs.json
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
          tag_name: ${{ steps.release-tag.outputs.tag }}
          prerelease: ${{ steps.versioning.outputs.is-prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Latest Minor Tag
        uses: EndBug/latest-tag@v1
        if: steps.versioning.outputs.is-prerelease == 'false'
        with:
          tag-name: v${{ steps.versioning.outputs.major }}
          description: ${{ steps.release-tag.outputs.tag }}
      - name: Update Latest Patch Tag
        uses: EndBug/latest-tag@v1
        if: steps.versioning.outputs.is-prerelease == 'false'
        with:
          tag-name: v${{ steps.versioning.outputs.major }}.${{ steps.versioning.outputs.minor }}
          description: ${{ steps.release-tag.outputs.tag }}
